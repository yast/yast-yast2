# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/cheetah/all/cheetah.rbi
#
# cheetah-0.5.2

module Cheetah
  def self.adapt_status(status, options); end
  def self.allowed_exitstatus?(options); end
  def self.build_commands(args); end
  def self.build_recorder(options); end
  def self.build_result(streams, status, options); end
  def self.build_streams(options, streamed); end
  def self.check_errors(commands, status, streams, streamed); end
  def self.chroot_step(options); end
  def self.close_fds; end
  def self.compute_streamed(options); end
  def self.default_options; end
  def self.default_options=(arg0); end
  def self.fork_commands(commands, options); end
  def self.fork_commands_recursive(commands, pipes, options); end
  def self.format_commands(commands); end
  def self.from_pipe(stream, pipe); end
  def self.into_pipe(stream, pipe); end
  def self.run(*args); end
  def self.select_loop(streams, pipes, recorder); end
  def self.with_env(env, &block); end
end
class Cheetah::ExecutionFailed < StandardError
  def commands; end
  def initialize(commands, status, stdout, stderr, message = nil); end
  def status; end
  def stderr; end
  def stdout; end
end
class Cheetah::Recorder
  def record_commands(*args); end
  def record_status(*args); end
  def record_stderr(*args); end
  def record_stdin(*args); end
  def record_stdout(*args); end
end
class Cheetah::NullRecorder < Cheetah::Recorder
  def record_commands(_commands); end
  def record_status(_status); end
  def record_stderr(_stderr); end
  def record_stdin(_stdin); end
  def record_stdout(_stdout); end
end
class Cheetah::DefaultRecorder < Cheetah::Recorder
  def format_commands(commands); end
  def initialize(logger); end
  def log_stream_increment(stream, data); end
  def log_stream_line(stream, line); end
  def log_stream_remainder(stream); end
  def record_commands(commands); end
  def record_status(status); end
  def record_stderr(stderr); end
  def record_stdin(stdin); end
  def record_stdout(stdout); end
end
