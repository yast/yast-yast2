{

include "testsuite.ycp";
import "Netmask";
import "Assert";

DUMP("Netmask::Check4");
TEST(``(Netmask::Check4("128.0.0.0")), [], nil);
TEST(``(Netmask::Check4("192.0.0.0")), [], nil);
TEST(``(Netmask::Check4("224.0.0.0")), [], nil);
TEST(``(Netmask::Check4("240.0.0.0")), [], nil);
TEST(``(Netmask::Check4("248.0.0.0")), [], nil);
TEST(``(Netmask::Check4("252.0.0.0")), [], nil);
TEST(``(Netmask::Check4("254.0.0.0")), [], nil);
TEST(``(Netmask::Check4("255.0.0.0")), [], nil);
TEST(``(Netmask::Check4("255.128.0.0")), [], nil);
TEST(``(Netmask::Check4("255.192.0.0")), [], nil);
TEST(``(Netmask::Check4("255.224.0.0")), [], nil);
TEST(``(Netmask::Check4("255.240.0.0")), [], nil);
TEST(``(Netmask::Check4("255.248.0.0")), [], nil);
TEST(``(Netmask::Check4("255.252.0.0")), [], nil);
TEST(``(Netmask::Check4("255.254.0.0")), [], nil);
TEST(``(Netmask::Check4("255.255.0.0")), [], nil);
TEST(``(Netmask::Check4("255.255.128.0")), [], nil);
TEST(``(Netmask::Check4("255.255.192.0")), [], nil);
TEST(``(Netmask::Check4("255.255.224.0")), [], nil);
TEST(``(Netmask::Check4("255.255.240.0")), [], nil);
TEST(``(Netmask::Check4("255.255.248.0")), [], nil);
TEST(``(Netmask::Check4("255.255.252.0")), [], nil);
TEST(``(Netmask::Check4("255.255.254.0")), [], nil);
TEST(``(Netmask::Check4("255.255.255.0")), [], nil);
TEST(``(Netmask::Check4("255.255.255.128")), [], nil);
TEST(``(Netmask::Check4("255.255.255.192")), [], nil);
TEST(``(Netmask::Check4("255.255.255.224")), [], nil);
TEST(``(Netmask::Check4("255.255.255.240")), [], nil);
TEST(``(Netmask::Check4("255.255.255.248")), [], nil);
TEST(``(Netmask::Check4("255.255.255.252")), [], nil);
TEST(``(Netmask::Check4("255.255.255.254")), [], nil);
TEST(``(Netmask::Check4("255.255.255.255")), [], nil);
TEST(``(Netmask::Check4("1.2.3.4")), [], nil);
TEST(``(Netmask::Check4("1.A.3.4")), [], nil);
TEST(``(Netmask::Check4("0.0.0.0")), [], nil);

TEST(``(Netmask::Check4(nil)), [], nil);
TEST(``(Netmask::Check4("")), [], nil);
TEST(``(Netmask::Check4("33")), [], nil);
TEST(``(Netmask::Check4("0")), [], nil);
TEST(``(Netmask::Check4("24")), [], nil);
TEST(``(Netmask::Check4("32")), [], nil);

DUMP("Netmask::Check6");
TEST(``(Netmask::Check6(nil)), [], nil);
TEST(``(Netmask::Check6("")), [], nil);
TEST(``(Netmask::Check6("345")), [], nil);
TEST(``(Netmask::Check6("128")), [], nil);

integer i = nil;
DUMP("Netmask::FromBits");
i = 32;
while (i >= 0) {
    TEST(``(Netmask::FromBits (i)), [], nil);
    i = i - 1;
}

// tests that returns empty mask for IPv6 specific prefixes (>32, <=128)
// implementatio of FromBits is IPv4 specific
i = 128;
while( i > 32)
{
    Assert::Equal( "", Netmask::FromBits(i) );
    i = i - 1;
}

// this test relies on the previous one
DUMP("Netmask::ToBits");
i = 32;
while (i >= 0) {
    TEST(``(Netmask::ToBits (Netmask::FromBits (i))), [], nil);
    i = i - 1;
}
TEST(``(Netmask::ToBits ("")), [], nil);

}
